name: Build and Deploy on AWS

on:
  push:
    branches:
      - main
jobs:
  build-apps:
    name: Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
          fetch-depth: 0                # fetch the whole repo history
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1
      - name: Configure environment name and variables
        id: env-name
        env:
          REPO: ${{ github.repository }}
        run: |
          ENVIRONMENT=`echo $REPO | tr "/" "-"`
          echo "Environment name: $ENVIRONMENT"
          echo "::set-output name=environment::$ENVIRONMENT"
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          #key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          key: ${{ runner.os }}-maven-${{ hashFiles('**/HelloWorldFunction/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
#      - name: Installing Oracle lib into local Maven repository
#        run: mvn install:install-file -Dfile=lib/ojdbc7.jar -DgroupId=com.oracle -DartifactId=ojdbc7 -Dversion=12.1.0.2 -Dpackaging=jar --quiet
      - name: Building with Maven
        id: projects
        run: mvn package --quiet -DskipTests
      - name: Upload YAML template files to next step
        uses: actions/upload-artifact@v3
#        with:
#          name: yaml
#          path: |
#            ./**/*.yaml
#            ./**/*-aws.jar
#          if-no-files-found: error
#  deploy-apps:
#    needs: build-apps
#    strategy:
#      matrix:
#        include:
#          - project: card-shipment-delivery-api
#          - project: card-shipment-download-file
#          - project: card-shipment-user-info-api
#          - project: card-shipment-payment-info-api
#          - project: card-shipment-user-info-status-job
#    runs-on: ubuntu-latest
#    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1
#      - name: Download YAML template files
#        uses: actions/download-artifact@v3
#        with:
#          name: yaml
#      - name: Packaging jars on AWS S3 on QA enviroment
#        run: |
          
#          mv ${{matrix.project}}/target/*-aws.jar ${{matrix.project}}/target/app.jar 
          
#         aws cloudformation package \
#         --template-file ${{ matrix.project }}/sam-main.yaml \
#          --s3-bucket github-deploy-prod-aquipay-jars \
#          --output-template-file ${{ matrix.project }}/sam-main-output.yaml 
          
#          echo "Maven artifacts built."
#      - name: Deploy new ${{ matrix.project }} app
#        run: |
#          aws cloudformation deploy \
#          --template-file ${{ matrix.project }}/sam-main-output.yaml \
#          --stack-name ${{ matrix.project }} \
#          --capabilities CAPABILITY_IAM \
#          --parameter-overrides \
#            ENVI=PRD \
#            ServiceName=${{ matrix.project }} \
#            JDBCURL=${{ secrets.JDBC_URL }} \
#            DBUSER=${{ secrets.DB_USER }} \
#            S3BucketName=${{ secrets.BUCKET_NAME }} \
#            S3FilePath=${{ secrets.FILE_PATH }} \
#            S3FileName=${{ secrets.FILE_NAME }} \
#            S3OutputPath=${{ secrets.OUTPUT_PATH }} \
#            DirectIntegrationSecret=${{ secrets.DIRECT_INTEGRATION_SECRET }} \
#            DirectIntegrationUrl=${{ secrets.DIRECT_INTEGRATION_URL }} \
#  remove-artifacts:
#    needs: deploy-apps
#    runs-on: ubuntu-latest
#    steps:
#      - name: Remove old artifacts
#        uses: c-hive/gha-remove-artifacts@v1
#        with:
#          age: '5 seconds'
